/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wsq.editor;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import org.jnbis.api.Jnbis;

/**
 *
 * @author matogolf
 */
public class MenuTopLeft extends javax.swing.JFrame {

    private static String WSQ_FILE_NAME;
    private int screenWidth;            //velkost obrazovky uzivatela
    private int screenHeight;           //velkost obrazovky uzivatela
    public int xBoundery;               // orezana plocha na zobrazovanie obrazka
    public int yBoundery;               // orezana plocha na zobrazovanie obrazka
    private int xBorder = 230;          // o kolko sa oreazava zobrazovacia plocha
    private int yBorder = 130;          // o kolko sa oreazava zobrazovacia plocha
    private BufferedImage img = null;   // obrazok ktory sa zobrazuje
    

    /**
     * Creates new form MenuFile
     */
    public MenuTopLeft() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        screenWidth = (int) screenSize.getWidth();
        screenHeight = (int) screenSize.getHeight();
        xBoundery = this.screenWidth - xBorder;
        yBoundery = this.screenHeight - yBorder;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        importImg = new javax.swing.JLabel();
        imgViewerLabel = new javax.swing.JLabel();
        brightnessButton = new javax.swing.JButton();
        contrastButton = new javax.swing.JButton();
        markantButton = new javax.swing.JButton();
        rotateButton = new javax.swing.JButton();
        cropButton = new javax.swing.JButton();
        textButton = new javax.swing.JButton();
        zoomPlusButton = new javax.swing.JButton();
        zoomMinusButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WSQ editor");
        setBackground(java.awt.Color.lightGray);

        importImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/editor/importWSQ3.png"))); // NOI18N
        importImg.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                importImgMouseMoved(evt);
            }
        });
        importImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importImgMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                importImgMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                importImgMouseEntered(evt);
            }
        });

        imgViewerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        brightnessButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/brightness.png"))); // NOI18N
        brightnessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brightnessButtonActionPerformed(evt);
            }
        });

        contrastButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/contrast.png"))); // NOI18N
        contrastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrastButtonActionPerformed(evt);
            }
        });

        markantButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/markant.png"))); // NOI18N

        rotateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/rotate.PNG"))); // NOI18N
        rotateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateButtonActionPerformed(evt);
            }
        });

        cropButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/crop.png"))); // NOI18N

        textButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/text.png"))); // NOI18N

        zoomPlusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/zoomPlus.PNG"))); // NOI18N

        zoomMinusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wsq/imgs/zoomMinus.PNG"))); // NOI18N
        zoomMinusButton.setMaximumSize(new java.awt.Dimension(50, 50));
        zoomMinusButton.setMinimumSize(new java.awt.Dimension(50, 50));
        zoomMinusButton.setPreferredSize(new java.awt.Dimension(50, 50));

        jMenuBar1.setMinimumSize(new java.awt.Dimension(70, 25));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Import WSQ file");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Import bitmap file");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Quit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Convert WSQ to BMP");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Convert WSQ to JPG");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Convert WSQ to PNG");
        jMenu2.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("// or just \"Convert WSQ to...\"");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Undo");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rotateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(markantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(textButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(zoomPlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(zoomMinusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(contrastButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(cropButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brightnessButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(importImg, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(imgViewerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(brightnessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contrastButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rotateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(markantButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomPlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoomMinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(imgViewerLabel)
                .addGap(85, 85, 85)
                .addComponent(importImg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        FileDialog f = new FileDialog(this, "Open WSQ File ", FileDialog.LOAD);
        String directory = null;
        f.setDirectory(directory);       // set the default directory
        f.show();
        directory = f.getDirectory();
        String filepath = directory+f.getFile();
        // display the dialog and wait for the user's response
        System.out.println(filepath);    

        WSQ_FILE_NAME = filepath;//("/home/ormos/Downloads/a001.wsq");
        byte[] jpgArray;
        jpgArray = Jnbis.wsq().decode(WSQ_FILE_NAME).toJpg().asByteArray();
        
        ByteArrayInputStream bais = new ByteArrayInputStream(jpgArray);
        try {
            img = ImageIO.read(bais);
            Dimension newImgSize = ImageTools.getScaledDimension(img.getWidth(), img.getHeight(), xBoundery, yBoundery);
            int x = (int) newImgSize.getWidth();
            int y = (int) newImgSize.getHeight();
            img = ImageTools.resize(img, x, y);
            
            if (ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getWidth() < 0 ||
                ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getHeight() < 0) {
                this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
            }
            else {
                this.setSize(ImageTools.getWindowSize(x, y, xBoundery, yBoundery));
            }
                            
            importImg.hide();
            imgViewerLabel.setIcon(new javax.swing.ImageIcon(img));                      
        
        } catch (IOException ex) {
            Logger.getLogger(MenuTopLeft.class.getName()).log(Level.SEVERE, null, ex);
        }
                
         

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void importImgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importImgMouseClicked
        FileDialog f = new FileDialog(this, "Open WSQ File ", FileDialog.LOAD);
        String directory = null;
        f.setDirectory(directory);       // set the default directory
        f.show();
        directory = f.getDirectory();
        String filepath = directory+f.getFile();
        // display the dialog and wait for the user's response
        System.out.println(filepath);    

        WSQ_FILE_NAME = filepath;//("/home/ormos/Downloads/a001.wsq");
        byte[] jpgArray;
        jpgArray = Jnbis.wsq().decode(WSQ_FILE_NAME).toJpg().asByteArray();
        
        ByteArrayInputStream bais = new ByteArrayInputStream(jpgArray);
        try {
            img = ImageIO.read(bais);
            Dimension newImgSize = ImageTools.getScaledDimension(img.getWidth(), img.getHeight(), xBoundery, yBoundery);
            int x = (int) newImgSize.getWidth();
            int y = (int) newImgSize.getHeight();
            img = ImageTools.resize(img, x, y);
            
            if (ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getWidth() < 0 ||
                ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getHeight() < 0) {
                this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
            }
            else {
                this.setSize(ImageTools.getWindowSize(x, y, xBoundery, yBoundery));
            }
                            
            importImg.hide();
            imgViewerLabel.setIcon(new javax.swing.ImageIcon(img));                      
     

        } catch (IOException ex) {
            Logger.getLogger(MenuTopLeft.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_importImgMouseClicked

    private void importImgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importImgMouseEntered
        Cursor handCursor = new Cursor(Cursor.HAND_CURSOR);
        setCursor(handCursor);   
    }//GEN-LAST:event_importImgMouseEntered

    private void importImgMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importImgMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_importImgMouseMoved

    private void importImgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importImgMouseExited
        Cursor defaultCursor = new Cursor(Cursor.DEFAULT_CURSOR);
        setCursor(defaultCursor);   
    }//GEN-LAST:event_importImgMouseExited

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        FileDialog f = new FileDialog(this, "Open bitmap File ", FileDialog.LOAD);
        String directory = null;
        f.setDirectory(directory);       // set the default directory
        f.show();
        directory = f.getDirectory();
        String filepath = directory+f.getFile();
        // display the dialog and wait for the user's response

        

            try {
                img = ImageIO.read(new File(filepath));
                Dimension newImgSize = ImageTools.getScaledDimension(img.getWidth(), img.getHeight(), xBoundery, yBoundery);
                int x = (int) newImgSize.getWidth();
                int y = (int) newImgSize.getHeight();
                img = ImageTools.resize(img, x, y); 
                
                System.out.println(ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getHeight());
                
                
                if (ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getWidth() < 0 ||
                    ImageTools.getWindowSize(x, y, xBoundery, yBoundery).getHeight() < 0) {
                    this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
                }
                else {
                    this.setSize(ImageTools.getWindowSize(x, y, xBoundery, yBoundery));
                }

                importImg.hide();
                imgViewerLabel.setIcon(new javax.swing.ImageIcon(img));
                imgViewerLabel.setHorizontalAlignment(JLabel.CENTER);
                

            }
            catch (IOException e) {
                System.err.println("I could not load the file \'"+directory+"'.  Sorry.");
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void brightnessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brightnessButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brightnessButtonActionPerformed

    private void contrastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrastButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contrastButtonActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void rotateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateButtonActionPerformed
        int w = img.getWidth();  
        int h = img.getHeight();  
        BufferedImage newImage = new BufferedImage(img.getWidth(), img.getHeight(), img.getType());
        Graphics2D g2 = newImage.createGraphics();
        g2.rotate(Math.toRadians(-90), w/2, h/2);  
        g2.drawImage(img,null,0,0);
        img = newImage;
        
        
        imgViewerLabel.setIcon(new javax.swing.ImageIcon(img));
    }//GEN-LAST:event_rotateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuTopLeft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuTopLeft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuTopLeft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuTopLeft.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuTopLeft().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brightnessButton;
    private javax.swing.JButton contrastButton;
    private javax.swing.JButton cropButton;
    public javax.swing.JLabel imgViewerLabel;
    private javax.swing.JLabel importImg;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JButton markantButton;
    private javax.swing.JButton rotateButton;
    private javax.swing.JButton textButton;
    private javax.swing.JButton zoomMinusButton;
    private javax.swing.JButton zoomPlusButton;
    // End of variables declaration//GEN-END:variables
}
